GLOBAL_CONFIG:
  data_source: "hybrid"
  prefer_stooq: true  # Use Stooq as primary source, yfinance as fallback
  
  # Portfolio capital configuration
  portfolio_value: 1000000.0  # Starting capital: $1M for compounding
  
  universe:
    - "AAPL"
    - "AMZN"
    - "MSFT"
    - "GOOGL"
    - "NVDA"
    - "TSLA"
    - "V"
    - "MCD"
    - "AVGO"
    - "AMD"
    - "WMT"
    - "COST"
    - "JPM"
    - "MA"
    - "MU"
    - "LLY"
    - "TGT"
    - "META"
    - "ORCL"
    - "PG"
    - "HD"
    - "JNJ"
    - "BAC"
    - "ABBV"
    - "XOM"
    - "CVX"
    - "WFC"
    - "CRM"
    - "GE"
    - "BA"
    - "ABT"
    - "MS"
    - "GS"
    - "DIS"
    - "LIN"
    - "MRK"
    - "RTX"
    - "BKNG"
    - "CAT"
    - "PEP"
    - "KO"
    - "INTU"
    - "TMUS"
    - "ACN"
    - "SCHW"
    - "TMO"
    - "SYK"
    - "AMGN"
    - "HON"
    - "AMAT"
    - "DHR"
    - "NEE"
    - "PLTR"
    - "UNH"
    - "GBTC"
    - "UVXY"
  benchmark: "SPY"
  start_date: "2013-01-01"
  end_date: "2025-06-30"
  # IBKR Commission Structure (for detailed calculations if needed)
  commission_per_share: 0.005
  commission_min_per_order: 1.0
  commission_max_percent_of_trade: 0.005
  
  # Realistic slippage for top 100 S&P 500 stocks (highly liquid large caps)
  slippage_bps: 2.5 # 2.5 basis points - realistic for liquid large caps
  
  # Total realistic transaction costs for retail trading liquid S&P 500 stocks
  # Combines: IBKR commissions (~1-3 bps) + slippage (~2-3 bps) + bid-ask spread (~1-2 bps)
  # + execution timing costs (~1-2 bps) = ~13 bps total (conservative estimate)

# Genetic Algorithm Configuration
general_optimizer_config:
  # Timeout for the entire optimization process in seconds
  optimizer_timeout_sec: 3600 # 1 hour

optimizer_config:
  optimizer_type: "genetic" # "optuna" or "grid_search"

# Genetic Algorithm Configuration
pygad_config:
  population_size: 100
  num_generations: 3

# Walk-Forward Optimization Robustness Configuration
wfo_robustness_config:
  # Enable/disable randomization features
  enable_window_randomization: false   # DISABLED: To improve performance and enable Numba fast path
  enable_start_date_randomization: false  # DISABLED: To improve performance and enable Numba fast path
  
  # Window length randomization (in months)
  train_window_randomization:
    min_offset: 3    # Minimum months to add/subtract from base train window
    max_offset: 14   # Maximum months to add/subtract from base train window
  
  test_window_randomization:
    min_offset: 3    # Minimum months to add/subtract from base test window  
    max_offset: 14   # Maximum months to add/subtract from base test window
  
  # Start date randomization (in months)
  start_date_randomization:
    min_offset: 0    # Minimum months to offset start date
    max_offset: 12   # Maximum months to offset start date (up to 1 year)
  
  # Stability metrics configuration
  stability_metrics:
    enable: true
    worst_percentile: 10     # Percentile for worst-case performance metric
    consistency_threshold: 0.0  # Threshold for consistency ratio (>0 performance)
  
  # Random seed for reproducibility (optional)
  random_seed: null  # Set to integer for reproducible randomization, null for random
  
  # PERFORMANCE OPTIMIZATION: Smart caching and vectorization
  cache_windows: true           # Cache randomized windows for repeated parameter combinations
  vectorized_randomization: true  # Use numpy for batch random number generation

# Monte-Carlo Synthetic Data Configuration
monte_carlo_config:
  # Enable/disable synthetic data generation
  enable_synthetic_data: true
  
  # Performance optimization: enable Monte Carlo during optimization trials for robustness testing
  # Stage 1 MC (during optimization) vs Stage 2 MC (after optimization stress testing)
  enable_during_optimization: false  # DISABLED: To improve performance and enable Numba fast path
  
  # Stage 2 comprehensive stress testing after optimization
  enable_stage2_stress_testing: true  # RESTORED: Re-enabled for full robustness analysis
  
  # Number of simulations to run per replacement level in Stage 2
  num_simulations_per_level: 10
  
  # Percentage of assets to replace with synthetic data (0.0 to 1.0)
  replacement_percentage: 0.05  # Reduced to 5% for faster testing
  
  # Minimum number of historical observations required for parameter estimation
  min_historical_observations: 200  # Reduced from 252 to 200 for more flexibility (about 8 months)
  
  # PERFORMANCE OPTIMIZATION: Smart caching system
  cache_synthetic_data: true  # Enable caching of synthetic data generation
  max_cache_size_mb: 1000     # Maximum cache size in MB
  parallel_generation: true   # Enable parallel synthetic data generation
  
  # PERFORMANCE PROFILES: Choose optimization vs robustness trade-off
  optimization_mode: "balanced"  # Options: "fast", "balanced", "comprehensive"
  
  # GARCH model configuration
  garch_config:
    # Model specification
    model_type: "GARCH"  # Options: "GARCH", "EGARCH", "GJR-GARCH"
    p: 1  # GARCH lag order
    q: 1  # ARCH lag order
    
    # Innovation distribution
    distribution: "studentt"  # Options: "normal", "studentt", "skewstudent", "ged"
    
    # Parameter bounds for estimation
    bounds:
      omega: [1e-6, 1.0]      # Constant term
      alpha: [0.01, 0.3]      # ARCH coefficient
      beta: [0.5, 0.99]       # GARCH coefficient
      nu: [2.1, 30.0]         # Degrees of freedom (Student-t)
      lambda: [-0.5, 0.5]     # Skewness parameter (if skewed distribution)
  
  # Jump-diffusion enhancement (optional)
  jump_diffusion:
    enable: false
    jump_intensity: 0.1     # Average jumps per day
    jump_size_mean: 0.0     # Mean jump size
    jump_size_std: 0.02     # Jump size volatility
  
  # Synthetic data generation parameters
  generation_config:
    # Length of synthetic series (will be trimmed to match required length)
    buffer_multiplier: 1.2  # Generate 20% more data than needed for trimming
    
    # Validation parameters
    max_attempts: 2         # Reduced attempts for faster generation
    validation_tolerance: 0.3  # Relaxed tolerance for faster generation
    
    # Preserve key statistical properties
    preserve_properties:
      - "mean"              # Daily return mean
      - "volatility"        # Daily return volatility  
      - "skewness"          # Return distribution skewness
      - "kurtosis"          # Return distribution kurtosis
      - "autocorr_returns"  # Return autocorrelation (lag 1)
      - "autocorr_squared"  # Squared return autocorrelation (volatility clustering)
  
  # Validation configuration for synthetic data quality
  validation_config:
    enable_validation: false  # Disable validation during optimization for better performance
    tolerance: 0.8  # Increase tolerance to 80% for more lenient validation when enabled
  
  # Random seed handling
  random_seed: null  # Set to integer for reproducible generation, null for random

# Parallel Processing Configuration
parallel_wfo_config:
  # Enable/disable parallel walk-forward optimization processing
  enable_parallel: true
  
  # Maximum number of worker processes (null = auto-detect based on CPU count - 1)
  max_workers: null
  
  # Minimum number of windows required to enable parallel processing
  min_windows_for_parallel: 2
  
  # Timeout per window evaluation in seconds
  process_timeout: 300
  
  # Memory limit per worker process in MB
  memory_limit_mb: 1000
  
  # Enable automatic fallback to sequential processing on errors
  enable_fallback: true

# Advanced Reporting Configuration
advanced_reporting_config:
  # Enable/disable advanced hyperparameter statistical analysis
  enable_advanced_parameter_analysis: false  # Disabled by default - generates complex correlation/sensitivity reports
  
  # Enable/disable regular performance metrics calculation (always keep enabled for basic reporting)
  enable_performance_metrics: true  # Always enabled - basic performance calculations
  
  # Enable/disable comprehensive optimization reports (markdown reports with plots)
  enable_optimization_reports: true  # Enabled by default - creates organized report directories
  
  # PERFORMANCE OPTIMIZATION: Control expensive reporting operations during optimization
  enable_during_optimization: false  # Disable expensive reporting during optimization for speed
  defer_expensive_plots: true  # Generate expensive plots only after optimization completes
  defer_parameter_analysis: true  # Defer parameter correlation/sensitivity analysis until after optimization
  defer_monte_carlo_plots: true  # Defer Monte Carlo robustness plots until after optimization
  
  # Control which plots are generated during vs after optimization
  optimization_time_plots:
    - "performance_summary"  # Only generate essential performance summary during optimization
  
  post_optimization_plots:
    - "optimization_progress"
    - "parameter_importance" 
    - "parameter_correlation"
    - "parameter_heatmaps"
    - "parameter_sensitivity"
    - "parameter_stability"
    - "monte_carlo_robustness"
    - "trial_pnl_curves"

OPTIMIZER_PARAMETER_DEFAULTS:
  max_lookback:
    type: "int"
    low: 20
    high: 250
    step: 10
  calmar_lookback:
    type: "int"
    low: 20
    high: 250
    step: 10
  leverage:
    type: "float"
    low: 0.5
    high: 2.0
    step: 0.1
  smoothing_lambda:
    type: "float"
    low: 0.0
    high: 0.9
  num_holdings:
    type: "int"
    low: 1
    high: 50
    step: 1
  sma_filter_window:
    type: "int"
    low: 20
    high: 250
  fast_ema_days:
    type: "int"
    low: 5
    high: 50
    step: 1
  slow_ema_days:
    type: "int"
    low: 50
    high: 200
    step: 1
  risk_off_leverage_multiplier:
    type: "float"
    low: 0.0
    high: 1.0
    step: 0.05
  target_return:
    type: "float"
    low: 0.0
    high: 0.1
    step: 0.01
  lookback_months: # Old parameter, can be kept for strategies not yet updated
    type: "categorical"
    values: [6]
  momentum_lookback_standard:
    type: "int"
    low: 6
    high: 12
    step: 1
  momentum_skip_standard:
    type: "int"
    low: 1
    high: 2
    step: 1
  momentum_lookback_predictive:
    type: "int"
    low: 6
    high: 12
    step: 1
  momentum_skip_predictive:
    type: "int"
    low: 0
    high: 1
    step: 1
  blending_lambda:
    type: "float"
    low: 0.0
    high: 1.0
    step: 0.1
  apply_trading_lag:
    type: "categorical"
    values: [True, False]
  alpha: # For DPVAMS
    type: "float"
    low: 0.1
    high: 0.9
    step: 0.1
  top_decile_fraction:
    type: "float"
    low: 0.1
    high: 0.5
    step: 0.1
  derisk_days_under_sma:
    type: "int"
    low: 4
    high: 18
    step: 2
  sizer_sharpe_window:
    type: "int"
    low: 2
    high: 12
    step: 1
  sizer_sortino_window:
    type: "int"
    low: 2
    high: 12
    step: 1
  sizer_beta_window:
    type: "int"
    low: 2
    high: 12
    step: 1
  sizer_corr_window:
    type: "int"
    low: 2
    high: 12
    step: 1
  sizer_dvol_window:
    type: "int"
    low: 6
    high: 12
    step: 1
  trade_longs:
    type: "categorical"
    values: [true, false]
  trade_shorts:
    type: "categorical" 
    values: [true, false]
  target_volatility:
    type: "float"
    low: 0.05
    high: 0.3
    step: 0.01
  rsi_period_enum: # Example of a numeric enum
    type: "categorical"
    values: [14, 21, 28]
  signal_generator_type: # Example of a string-based enum (for class names)
    type: "categorical"
    values: ["RSI", "MovingAverageCrossover"]
  position_sizer: # For optimizing the choice of position sizer
    type: "categorical"
    values: ["equal_weight", "rolling_sharpe", "rolling_sortino", "rolling_beta", "rolling_benchmark_corr", "rolling_downside_volatility"]
  stop_loss_type:
    type: "categorical"
    values: ["NoStopLoss", "AtrBasedStopLoss"]
  atr_length: # For AtrBasedStopLoss
    type: "int"
    low: 5
    high: 30 # Adjusted from 50 to 30 for typical ATR usage
    step: 1
  atr_multiple: # For AtrBasedStopLoss
    type: "float"
    low: 1.0
    high: 5.0
    step: 0.5
  # Low-Volatility Factor Strategy Parameters
  volatility_lookback_days:
    type: "int"
    low: 63
    high: 504
    step: 63
  size_percentile:
    type: "int"
    low: 40
    high: 60
    step: 10
  vol_percentile_low:
    type: "int"
    low: 20
    high: 40
    step: 5
  vol_percentile_high:
    type: "int"
    low: 60
    high: 80
    step: 5
  beta_lookback_months:
    type: "int"
    low: 24
    high: 48
    step: 12
  beta_min_cap:
    type: "float"
    low: 0.1
    high: 0.5
    step: 0.05
  beta_max_cap:
    type: "float"
    low: 1.5
    high: 3.0
    step: 0.5
  beta_max_low_vol:
    type: "float"
    low: 0.8
    high: 1.2
    step: 0.1
  use_hedged_legs:
    type: "categorical"
    values: [true, false]
  trade_longs:
    type: "categorical"
    values: [true, false]
  trade_shorts:
    type: "categorical"
    values: [true, false]
  account_for_costs:
    type: "categorical"
    values: [true, false]
  shorting_fee_annual:
    type: "float"
    low: 0.005
    high: 0.02
    step: 0.005
  active_months:
    type: "multi-categorical"
    values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
  rebalance_frequency:
    type: "categorical"
    values: ["M", "Q", "A"]
  allocation_mode:
    type: "categorical"
    values: ["reinvestment", "compound", "fixed_fractional", "fixed_capital"]
  spy_weight:
    type: "float"
    low: 0.05
    high: 0.95
    step: 0.05
  gld_weight:
    type: "float"
    low: 0.05
    high: 0.95
    step: 0.05
  vol_window:
    type: "int"
    low: 63
    high: 252
    step: 63